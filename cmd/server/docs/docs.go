// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://developers.ctd.com.ar/es_ar/terminos-y-condiciones",
        "contact": {
            "name": "Paulina Oberti Busso (paulinaobertibusso@gmail.com)- Mariana Ca√±as (mariana.famaf@gmail.com)",
            "url": "https://developers.ctd.com.ar/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/appointments": {
            "put": {
                "description": "Update an appointment's data with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated appointment data",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated appointment",
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new appointment with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Appointment data",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created appointment",
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a specific field of an appointment's data with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a specific field of an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated appointment field data",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated appointment",
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/appointments/dni": {
            "get": {
                "description": "Retrieve appointments by patient's DNI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get appointments by DNI",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Patient's DNI",
                        "name": "dni",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'turnos': 'Appointments'}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/appointments/dni-license": {
            "post": {
                "description": "Create appointment by patient's DNI and dentist's license with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create appointment by DNI and License",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Appointment data including patient's DNI and dentist's license",
                        "name": "appointmentData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AppointmentData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'turnos': 'Appointments created'}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/appointments/{id}": {
            "get": {
                "description": "Retrieve appointment's data by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get appointment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested appointment",
                        "schema": {
                            "$ref": "#/definitions/domain.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an appointment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'message': 'Appointment deleted'}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/dentists": {
            "put": {
                "description": "Update a dentist's data with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a dentist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated dentist data",
                        "name": "dentist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated dentist",
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new dentist with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new dentist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dentist data",
                        "name": "dentist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created dentist",
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a specific field of a dentist's data with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a specific field of a dentist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated dentist field data",
                        "name": "dentist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated dentist",
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/dentists/{id}": {
            "get": {
                "description": "Retrieve dentist's data by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get dentist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dentist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested dentist",
                        "schema": {
                            "$ref": "#/definitions/domain.Dentist"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a dentist by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a dentist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dentist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'message': 'Dentist deleted'}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/patients": {
            "put": {
                "description": "Update a patient's data with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated patient data",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated patient",
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new patient with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Patient data",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created patient",
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a specific field of a patient's data with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a specific field of a patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated patient field data",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the updated patient",
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "description": "Retrieve a patient's data by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a patient by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested patient",
                        "schema": {
                            "$ref": "#/definitions/domain.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a patient by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{'message': 'Patient deleted'}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorApi"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Appointment": {
            "description": "Appointment information",
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_dentist": {
                    "type": "integer"
                },
                "id_patient": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "domain.AppointmentData": {
            "description": "AppointmentData information",
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dni": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "domain.Dentist": {
            "description": "Dentist information including ID, first name, last name, and license number.",
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                }
            }
        },
        "domain.Patient": {
            "description": "Patient information including ID, last name, first name, address, DNI, and registration date.",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "dni": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "registration_date": {
                    "type": "string"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "web.ErrorApi": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "DENTAL-CLINIC PAULANA'S OFFICE -  API DOCUMENTATION",
	Description:      "This API handles appointments with patients and dentists data.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
